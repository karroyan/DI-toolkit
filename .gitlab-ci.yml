image: "registry.sensetime.com/xlab/python:3.7.6"

variables:
  CI: "true"

stages:
  - test
  - doc
  - build
  - deploy

test_py_3_6_3:
  stage: test
  image: "registry.sensetime.com/xlab/python:3.6.3"
  script:
    - python -V
    - pip install -r requirements.txt
    - pip install -r requirements-test.txt
    - make unittest

test_py_3_7_6:
  stage: test
  image: "registry.sensetime.com/xlab/python:3.7.6"
  script:
    - python -V
    - pip install -r requirements.txt
    - pip install -r requirements-test.txt
    - make unittest

test_py_3_8_1:
  stage: test
  image: "registry.sensetime.com/xlab/python:3.8.1"
  script:
    - python -V
    - pip install -r requirements.txt
    - pip install -r requirements-test.txt
    - make unittest

test_py_3_9_6:
  stage: test
  image: "registry.sensetime.com/xlab/python:3.9.6"
  script:
    - python -V
    - pip install -r requirements.txt
    - pip install -r requirements-test.txt
    - make unittest

test_py_3_10_1:
  stage: test
  image: "registry.sensetime.com/xlab/python:3.10.1"
  script:
    - python -V
    - pip install -r requirements.txt
    - pip install -r requirements-test.txt
    - make unittest

pages:
  stage: doc
  services:
    - name: registry.sensetime.com/xlab/plantuml-server:latest
      alias: plantuml
  variables:
    ENV_PROD: 'true'
    PLANTUML_HOST: http://plantuml:8080
  script:
    - pip install -r requirements.txt
    - pip install -r requirements-test.txt
    - pip install -r requirements-doc.txt
    - git fetch --all --tags
    - git branch -av
    - git remote -v
    - git tag
    - plantumlcli -c
    - make pdocs
    - mv docs/build/html public
  artifacts:
    paths:
      - public
  only:
    - main
    - tags
    - /^dev/.*$/
    - /^doc/.*$/

build_package:
  stage: build
  script:
    - pip install -r requirements.txt
    - pip install -U build
    - make package
    - ls -al dist/*
  artifacts:
    paths:
      - dist/*
  only:
    - main
    - tags
    - /^dev/.*$/

deploy_pypi:
  stage: deploy
  dependencies:
    - build_package
  script:
    - pip install -U twine setuptools wheel
    - twine upload -u $PYPI_USER -p $PYPI_PASS dist/*
  only:
    - tags

